Length of the longest substring


Given a string s, find the length of the longest substring without repeating characters.

Examples:

Input: s = "geeksforgeeks"
Output: 7
Explanation: Longest substring is "eksforg".
Input: s = "abdefgabef"
Output: 6
Explanation: Longest substring are "abdefg" , "bdefga" and "defgab".
Input: s = "aaaaa"
Output: 1
Explanation: Longest substring is "a".
Constraints:
1 ≤ s.size() ≤ 105
It is guaranteed that all characters of the String s will be lowercase letters from 'a' to 'z'


class Solution {
    int longestUniqueSubstring(String s) {
        // code here
        HashMap<Character,Integer> hm = new HashMap<>();
        int maxLength = 0;
        int l = 0;
        for(int i = 0;i<s.length();i++){
            char endChar = s.charAt(i);
            hm.put(endChar,hm.getOrDefault(endChar,0)+1);
            while(hm.get(endChar)>1){
                char startChar = s.charAt(l);
                hm.put(startChar,hm.get(startChar)-1);
                if(hm.get(startChar)==0){
                    hm.remove(startChar);
                }
                l++;
            }
            maxLength = Math.max(maxLength,i-l+1);
            
        }
        return maxLength;
    }
}