Postorder Traversal


Given a binary tree, find the Postorder Traversal of it and return a list containing the postorder traversal of the given tree.

Examples:

Input: root = [19, 10, 8, 11, 13]
        19
     /     \
    10      8
  /    \
 11    13
Output: [11, 13, 10, 8, 19]
Input: root = [11, 15, N, 7]
          11
         /
       15
      /
     7
Output: [7, 15, 11]
Constraints:
1 <= number of nodes <= 105
0 <= node->data <= 106

class Solution {
    // Function to return a list containing the postorder traversal of the tree.
    ArrayList<Integer> postOrder(Node root) {
        // Your code goes here
        ArrayList<Integer> li = new ArrayList<>();
        postOrderHelper(root,li);
        return li;
    }
    static void postOrderHelper(Node root, ArrayList<Integer> li){
        if(root == null) return;
        postOrderHelper(root.left,li);
        postOrderHelper(root.right,li);
        li.add(root.data);
    }
}