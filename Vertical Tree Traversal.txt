Vertical Tree Traversal


Given a Binary Tree, find the vertical traversal of it starting from the leftmost level to the rightmost level.
If there are multiple nodes passing through a vertical line, then they should be printed as they appear in level order traversal of the tree.

Examples:

Input: root = [1, 2, 3, 4, 5, 6, 7, N, N, N, N, N, 8, N, 9]

 Vertical-Taversal-          
Output: [4, 2, 1, 5, 6, 3, 8, 7, 9] 
Explanation: from left to right the vertical order will be [4, 2, 1, 5, 6, 3, 8, 7, 9] 

Input: root = [1, 2, 3, 4, 5, N, 6]

       1
    /    \
   2       3
 /    \      \
4      5      6
Output: [4, 2, 1, 5, 3, 6]
Explanation: from left to right the vertical order will be [4, 2, 1, 5, 3, 6]
Input: root = [7, 2, 3, 4, 5, N, 6]
     7
    /    \
   2       3
 /    \      \
4      5      6
Output: [4, 2, 7, 5, 3, 6]
Explanation: from left to right the vertical order will be [4, 2, 7, 5, 3, 6]
Constraints:
1 <= number of nodes <= 104
1 <= node->data <= 104




class Tuple{
    Node node;
    int x,y;
    public Tuple(Node node,int x,int y){
        this.node = node;
        this.x = x;
        this.y = y;
    }
}

class Solution
{
    //Function to find the vertical order traversal of Binary Tree.
    static ArrayList <Integer> verticalOrder(Node root)
    {
        // add your code here
        TreeMap<Integer,TreeMap<Integer,ArrayList<Integer>>> map = new TreeMap<>();
        Queue<Tuple> q = new LinkedList<>();
        q.offer(new Tuple(root,0,0));
        while(!q.isEmpty()){
            Tuple tuple = q.poll();
            Node node = tuple.node;
            int x = tuple.x;
            int y = tuple.y;
            if(!map.containsKey(x)) map.put(x,new TreeMap<>());
            if(!map.get(x).containsKey(y)) map.get(x).put(y,new ArrayList<>());
            map.get(x).get(y).add(node.data);
            if(node.left!=null) q.offer(new Tuple(node.left,x-1,y+1));
            if(node.right!=null) q.offer(new Tuple(node.right,x+1,y+1));
        }
        ArrayList<Integer> res = new ArrayList<>();
        for(TreeMap<Integer,ArrayList<Integer>> ys:map.values()){
            for(ArrayList<Integer> nodes:ys.values()){
                
                    res.addAll(nodes);
                
                
            }
        }
        return res;
    }
}