Right View of Binary Tree


Given a Binary Tree, Your task is to return the values visible from Right view of it.

Right view of a Binary Tree is set of nodes visible when tree is viewed from right side.

Examples :

Input: root = [1, 2, 3, 4, 5]
     2_2
Output: [1, 3, 5]
Input: root = [1, 2, 3, 4, N, N, 5]
     Right-view-in-binary-tree-1
Output: [1, 3, 4, 5]
Input: root = [10, 20, 90, 40, 60]
     10
    /   \
  20     90
 /   \
40  60 
Output: [10, 90, 60]
Constraints:
1 ≤ number of nodes ≤ 105
0 ≤ node->data ≤ 105




class Solution {
    // Function to return list containing elements of right view of binary tree.
    ArrayList<Integer> rightView(Node root) {
        // add code here.
         ArrayList<Integer> res = new ArrayList<>();
        rightView(root,0,res);
        return res;
    }
    static void rightView(Node root, int level, ArrayList<Integer> res){
        if(root==null) return;
        if(level==res.size()) res.add(root.data);
        rightView(root.right,level+1,res);
        rightView(root.left,level+1,res);
        
    }
}