Merge Intervals


Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.

 

Example 1:

Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6].



class Solution {
    public int[][] merge(int[][] intervals) {
        if(intervals==null||intervals.length<=1) return intervals;
        Arrays.sort(intervals,Comparator.comparingInt(a->a[0]));
        List<int[]> merged = new ArrayList<>();
        int[] currentInterval = intervals[0];
        for(int i =1;i<intervals.length;i++){
            int[] interval = intervals[i];
            if(interval[0]<=currentInterval[1]) currentInterval[1] = Math.max(currentInterval[1],interval[1]);
            else{
                merged.add(currentInterval);
                currentInterval = interval;
            }
        }
        merged.add(currentInterval);
        return merged.toArray(new int[merged.size()][]);
        
    }
}