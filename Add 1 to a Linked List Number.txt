Add 1 to a Linked List Number

You are given a linked list where each element in the list is a node and have an integer data. You need to add 1 to the number formed by concatinating all the list node numbers together and return the head of the modified linked list. 

Note: The head represents the first element of the given array.

Examples :

Input: LinkedList: 4->5->6
Output: 457

Explanation: 4->5->6 represents 456 and when 1 is added it becomes 457. 
Input: LinkedList: 1->2->3
Output: 124
 
Explanation:  1->2->3 represents 123 and when 1 is added it becomes 124. 
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints:
1 <= len(list) <= 105
0 <= list[i] <= 9

class Solution {
    public Node addOne(Node head) {
        // code here.
        head = reverse(head);
        int sum,carry=1;
        Node curr = head,prv = null;
        while(curr!=null){
            sum = curr.data+carry;
            carry = sum/10;
            curr.data = sum%10;
            prv = curr;
            curr = curr.next;
        }
        if(carry>0){
            prv.next = new Node(carry);
        }
        head = reverse(head);
        return head;
        
    }
    static Node reverse(Node head){
        Node curr = head, prv = null,next = null;
        while(curr!=null){
            next = curr.next;
            curr.next = prv;
            prv = curr;
            curr =next;
        }
        return prv;
    }
}
