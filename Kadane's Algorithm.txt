Kadane's Algorithm


Given an array Arr[] of N integers. Find the contiguous sub-array(containing at least one number) which has the maximum sum and return its sum.


Example 1:

Input:
N = 5
Arr[] = {1,2,3,-2,5}
Output:
9
Explanation:
Max subarray sum is 9
of elements (1, 2, 3, -2, 5) which 
is a contiguous subarray.

class Solution{

    // arr: input array
    // n: size of array
    //Function to find the sum of contiguous subarray with maximum sum.
    long maxSubarraySum(int arr[], int n){
        
        // Your code here
        long max_current = arr[0],max_global=arr[0];
        for(int i = 1;i<n;i++){
            max_current = Math.max(arr[i],max_current+arr[i]);
            if(max_current>max_global) max_global = max_current;
        }
        return max_global;
        
    }
    
}
