Reverse a Doubly Linked List


Given a doubly linked list. Your task is to reverse the doubly linked list and return its head.

Examples:

Input: LinkedList: 3 <-> 4 <-> 5
Output: 5 <-> 4 <-> 3

Input: LinkedList: 75 <-> 122 <-> 59 <-> 196
Output: 196 <-> 59 <-> 122 <-> 75

Expected Time Complexity: O(n).
Expected Auxiliary Space: O(1).

Constraints:
1 <= number of nodes <= 106
0 <= node->data <= 104

class Solution {
    public DLLNode reverseDLL(DLLNode head) {
        // Your code here
        if(head==null) return null;
        DLLNode t = head.prev;
        head.prev = head.next;
        head.next = t;
        if(head.prev==null) return head;
        return reverseDLL(head.prev);
    }
}