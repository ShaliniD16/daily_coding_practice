Prefix to Postfix Conversion

You are given a string that represents the prefix form of a valid mathematical expression. Convert it to its postfix form.

Example:

Input: 
*-A/BC-/AKL
Output: 
ABC/-AK/L-*
Explanation: 
The above output is its valid postfix form.
Your Task:

Complete the function preToPost(string pre_exp), which takes a prefix string as input and returns its postfix form.

 

Expected Time Complexity: O(N).

Expected Auxiliary Space: O(N).

Constraints:

3<=pre_exp.length()<=100

class Solution {
    static String preToPost(String pre_exp) {
        // code here
        Stack<String> s = new Stack<>();
        for(int i = pre_exp.length()-1;i>=0;i--){
            char c = pre_exp.charAt(i);
            if((c>='A' && c<='Z')||(c>='a' && c<='z')){
                s.push(c+"");
            }
            else{
                String a = s.pop();
                String b = s.pop();
                String temp = a+b+c;
                s.push(temp);
            }
        }
        return s.pop();
    }
}