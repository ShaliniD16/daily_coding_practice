Implement Atoi


Given a string, s, the objective is to convert it into integer format without utilizing any built-in functions. If the conversion is not feasible, the function should return -1.

Note: Conversion is feasible only if all characters in the string are numeric or if its first character is '-' and rest are numeric.

Example 1:

Input:
s = "-123"
Output: 
-123
Explanation:
It is possible to convert -123 into an integer 
and is so returned in the form of an integer
Example 2:

Input:
s = "21a"
Output: 
-1
Explanation: 
The output is -1 as, due to the inclusion of 'a',
the given string cannot be converted to an integer.

class Solution {
    int atoi(String s) {
        if (s == null || s.isEmpty()) {
            return -1;
        }

        // Helper function to process the string recursively
        return atoiHelper(s, 0, 0, 1);
    }

    private int atoiHelper(String s, int index, int result, int sign) {
        if (index == s.length()) {
            return result * sign;
        }

        char c = s.charAt(index);

        if (index == 0 && c == '-') {
            return atoiHelper(s, index + 1, result, -1);
        }

        if (c >= '0' && c <= '9') {
            result = result * 10 + (c - '0');
            return atoiHelper(s, index + 1, result, sign);
        }

        
        return -1;
    }
}
