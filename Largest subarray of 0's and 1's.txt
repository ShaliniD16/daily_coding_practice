Largest subarray of 0's and 1's


Given an array arr of 0s and 1s. Find and return the length of the longest subarray with equal number of 0s and 1s.

Examples:

Input: arr[] = [0, 1, 0, 1]
Output: 4
Explanation: The array from index [0...3] contains equal number of 0's and 1's. Thus maximum length of subarray having equal number of 0's and 1's is 4.
Input: arr[] = [0, 0, 1, 0, 0]
Output: 2
Explnation: The subarray arr[1..2] has one 0 and one 1. Thus the length of the longest subarray with equal 0s and 1s is 2.
Input: arr[] = [0]
Output: 0
Explnation: The array does not contain 1, hence the subarray cannot be found haveing equal 0s and 1s. Hence, the answer is 0.
Constraints:
1 <= arr.size() <= 105
0 <= arr[i] <= 1



class Solution {
    public int maxLen(int[] arr) {
        // Your code here
        int maxLength = 0;
        
        int sum = 0;
        HashMap<Integer,Integer> hm = new HashMap<>();
        for(int i = 0;i<arr.length;i++){
            if(arr[i]==0) arr[i]=-1;
        }
        for(int i = 0;i<arr.length;i++){
            sum+=arr[i];
            if(sum==0) maxLength = i+1;
            if(hm.containsKey(sum)){
                maxLength = Math.max(maxLength,i-hm.get(sum));
            }
            else{
                hm.put(sum,i);
            }
        }
        return maxLength;
        
    }
}