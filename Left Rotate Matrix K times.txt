Left Rotate Matrix K times

You are given an integer k and matrix mat. Rotate the elements of the given matrix to the left k times and return the resulting matrix.

Examples:

Input: k=1, mat=[[1,2,3],[4,5,6],[7,8,9]]
Output:
2 3 1
5 6 4
8 9 7
Explanation: Rotate the matrix by one
1 2 3       2 3 1
4 5 6  =>  5 6 4
7 8 9       8 9 7
Input: k=2, mat=[[1,2,3],[4,5,6],[7,8,9]]
Output:
3 1 2
6 4 5
9 7 8
Explanation: After rotating the matrix looks like
1 2 3       2 3 1       3 1 2
4 5 6  =>  5 6 4  =>   6 4 5
7 8 9       8 9 7       9 7 8

class Solution {
    int[][] rotateMatrix(int k, int mat[][]) {
        // code here
        int row = mat.length;
        int col = mat[0].length;
        
        int[][] res = new int[row][col];
        for(int i = 0;i<row;i++){
            for(int j = 0;j<col;j++){
                int newc = (j+col-k%col)%col;
                res[i][newc] = mat[i][j];
            }
        }
        return res;
        
    }
}