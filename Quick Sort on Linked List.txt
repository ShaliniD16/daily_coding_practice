Quick Sort on Linked List

You are given a Linked List. Sort the given Linked List using quicksort. 

Examples:

Input: Linked list: 1->6->2
Output: 1->2->6

Explanation:
After sorting the nodes, we have 1, 2 and 6.
Input: Linked list: 1->9->3->8
Output: 1->3->8->9

Explanation:
After sorting the nodes, we have 1, 3, 8 and 9. 
Constraints:
1<= size of linked list <= 105


class GfG {
    public static Node quickSort(Node node) {
        // Your code here
        Node tail = getTail(node);
        qshelper(node,tail);
        return node;
        
    }
    static void qshelper(Node node,Node tail){
        if(node==null || node==tail){
            return;
        }
        Node pivot = partition(node,tail);
        qshelper(node,pivot);
        qshelper(pivot.next,tail);
    }
    static Node partition(Node node, Node tail){
        Node prv = node,curr = node,pivot = node;
        while(curr!=tail.next){
            if(curr.data<pivot.data){
                int temp = curr.data;
                curr.data = prv.next.data;
                prv.next.data = temp;
                prv = prv.next;
            }
            curr =curr.next;
        }
        int temp = pivot.data;
        pivot.data = prv.data;
        prv.data = temp;
        return prv;
    }
    static Node getTail(Node node){
        while(node!=null && node.next!=null){
            node = node.next;
        }
        return node;
    }
}