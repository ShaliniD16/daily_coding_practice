class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        int n = nums.length;
        int left;
        int right;
        List<List<Integer>> result = new ArrayList<>();
        
        for(int i = 0;i<n-3;i++){
            
            for(int j = i+1;j<n-2;j++){
                
                left = j+1;
                right = n-1;
                while(left<right){
                    long sum = (long)nums[i]+nums[j]+nums[left]+nums[right];
                    if(sum==target){
			List<Integer> list = new ArrayList<>();
                        list.add(nums[i]);
                        list.add(nums[j]);
                        list.add(nums[left]);
                        list.add(nums[right]); 
                        boolean exists = false;
                        for(List<Integer> li:result){
                            if(list.equals(li)) {exists = true;break;}
                        }
                        if(!exists){
                            result.add(list);
                        }
                        
                        left++;
                        right--;
                    }
                    else if(sum<target) left++;
                    else right--;
                }
            }
        }
        return result;
    }
}